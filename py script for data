import vertica_python as vp
from verticapy import *
import pandas as pd
from os import listdir
from os.path import isfile, join

conn = {
    'host': 'localhost',
    'port': 5433,
    'user': 'dbadmin',
    'password': '',
    'database': 'VMart'
}


with vp.connect(**conn) as connection:
    cur = connection.cursor()
    path = "C:\\Users\\User\\Desktop\\sandbox.KNU"
    # усі папки головної це схеми файли в них тейбли
    schemas = [f for f in listdir(path) if not isfile(join(path, f))]
    for sch in schemas:
        tables = [f for f in listdir(path + "\\" + sch) if isfile(join(path + "\\" + sch, f))]
        for t in tables:
            tpath = path + "\\" + sch + "\\" + t
            print(tpath)
            df_init = pd.read_csv(tpath, delimiter='\t')  # в датафрейм пандасу файл

            #заисуемо дати як дати
            datas = []
            for col in df_init.columns:
                if "dt" in col:
                    df_init[col] = pd.to_datetime(df_init[col], errors='coerce')

            df = pandas_to_vertica(df=df_init, name=t[:-4:], cursor=cur, schema=sch)#в датафрейм вертіки з дф пандасу
            try:
                try:
                    df.to_db(name=sch + "." + t[:-4:], relation_type='table')
                except vp.errors.DuplicateObject:  # if table exist
                    try:
                        pd.read_sql("drop table " + sch + "." + t[:-4:], connection)
                    except TypeError:  # always
                        pass
                    df.to_db(name=sch + "." + t[:-4:], relation_type='table')
            except vp.errors.InterfaceError:
                try:  # при неправильному запиті курсор буде злітати і його треба репозначити
                    cur.close()
                    cur = connection.cursor()
                except:  # на всяк випадок
                    connection.close()
                    connection = vp.connect(**conn)
                cur = connection.cursor()
                df.to_db(name=sch + "." + t[:-4:], relation_type='table')
    connection.commit()
    cur.close()
